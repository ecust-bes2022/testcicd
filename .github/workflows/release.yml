name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build x86
      run: |
        cmake -B ${{github.workspace}}/build-x86 -A Win32 -DCMAKE_BUILD_TYPE=Release
        cmake --build ${{github.workspace}}/build-x86 --config Release

    - name: Build x64
      run: |
        cmake -B ${{github.workspace}}/build-x64 -A x64 -DCMAKE_BUILD_TYPE=Release
        cmake --build ${{github.workspace}}/build-x64 --config Release

    - name: Check build outputs
      run: |
        if (!(Test-Path "${{github.workspace}}\build-x86\Release\*.lib")) {
          Write-Error "x86 build outputs not found"
          exit 1
        }
        if (!(Test-Path "${{github.workspace}}\build-x64\Release\*.lib")) {
          Write-Error "x64 build outputs not found"
          exit 1
        }

    - name: Package
      run: |
        New-Item -ItemType Directory -Force -Path "release-package"
        New-Item -ItemType Directory -Force -Path "release-package\x86"
        New-Item -ItemType Directory -Force -Path "release-package\x64"
        
        $x86LibPath = "${{github.workspace}}\build-x86\Release\*.lib"
        $x86DllPath = "${{github.workspace}}\build-x86\Release\*.dll"
        if (Test-Path $x86LibPath) {
            Copy-Item -Path $x86LibPath -Destination "release-package\x86\" -Force
        } else {
            Write-Warning "No x86 .lib files found"
        }
        if (Test-Path $x86DllPath) {
            Copy-Item -Path $x86DllPath -Destination "release-package\x86\" -Force
        } else {
            Write-Warning "No x86 .dll files found"
        }
        
        $x64LibPath = "${{github.workspace}}\build-x64\Release\*.lib"
        $x64DllPath = "${{github.workspace}}\build-x64\Release\*.dll"
        if (Test-Path $x64LibPath) {
            Copy-Item -Path $x64LibPath -Destination "release-package\x64\" -Force
        } else {
            Write-Warning "No x64 .lib files found"
        }
        if (Test-Path $x64DllPath) {
            Copy-Item -Path $x64DllPath -Destination "release-package\x64\" -Force
        } else {
            Write-Warning "No x64 .dll files found"
        }
        
        Get-ChildItem -Recurse release-package
        Compress-Archive -Path "release-package" -DestinationPath "release-package.zip" -Force

    - name: Debug Info
      run: |
        echo "GitHub Ref: ${{ github.ref }}"
        echo "GitHub Event Name: ${{ github.event_name }}"
        echo "GitHub Actor: ${{ github.actor }}"
        echo "GitHub Repository: ${{ github.repository }}"

    - name: Create Release
      uses: actions/github-script@v6
      with:
        script: |
          try {
            const response = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: context.ref.replace('refs/tags/', ''),
              name: `Release ${context.ref.replace('refs/tags/', '')}`,
              draft: false,
              prerelease: false
            });
            console.log(`Release created: ${response.data.html_url}`);
          } catch (error) {
            core.setFailed(error.message);
          }

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-package.zip
        asset_name: windows-libs.zip
        asset_content_type: application/zip
